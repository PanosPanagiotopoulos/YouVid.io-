# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name localhost;

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server block for default HTTPS port (443)
server {
    listen 443 ssl;
    server_name localhost;

    # Path to SSL certificate and key
    ssl_certificate /etc/nginx/certs/selfsigned.crt;
    ssl_certificate_key /etc/nginx/certs/selfsigned.key;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Optimize client buffer sizes to handle large files
    client_max_body_size 800M;

    location / {
        root /usr/share/nginx/html;
        try_files $uri /index.html;
    }

    location /api/ {
        proxy_pass http://backend-api:7076;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_cache off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
}

# HTTPS server block for frontend on port 5001
server {
    listen 5001 ssl;
    server_name localhost;

    # Path to SSL certificate and key
    ssl_certificate /etc/nginx/certs/selfsigned.crt;
    ssl_certificate_key /etc/nginx/certs/selfsigned.key;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Optimize client buffer sizes to handle large files
    client_max_body_size 800M;

    location / {
        root /usr/share/nginx/html;
        try_files $uri /index.html;
    }
}
